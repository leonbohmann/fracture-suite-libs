# Use an official Python runtime as a parent image
FROM python:3.10-slim AS base

# Common system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    ca-certificates \
    gnupg \
    git \
    mingw-w64

# Create a build stage for Rust-related installations
FROM base AS rust-builder
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="$PATH:/root/.cargo/bin"
RUN rustup target add x86_64-pc-windows-gnu & cargo install maturin

# Node.js installation stage
FROM base AS node-builder
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
RUN echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
RUN apt-get update && apt-get install -y nodejs

# Final image
FROM base
# Copy Rust binaries
COPY --from=rust-builder /root/.cargo/bin/* /usr/local/bin/
# Copy Node.js binaries
COPY --from=node-builder /usr/bin/node /usr/bin/
COPY --from=node-builder /usr/lib/node_modules/ /usr/lib/node_modules/
# Reduce the layer by cleaning up
RUN apt-get clean && rm -rf /var/lib/apt/lists/*